#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π –ø–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º
"""

import os
import subprocess
import sys


def run_task(task_file, task_name):
    """–ó–∞–ø—É—Å–∫ –∑–∞–¥–∞–Ω–∏—è –∏ –ø–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    print(f"\n{'=' * 60}")
    print(f"üéØ –í–´–ü–û–õ–ù–Ø–ï–¢–°–Ø: {task_name}")
    print(f"üìÅ –§–∞–π–ª: {task_file}")
    print('=' * 60)

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Python —Å–∫—Ä–∏–ø—Ç
        result = subprocess.run([sys.executable, task_file],
                                capture_output=True,
                                text=True,
                                encoding='utf-8')

        if result.stdout:
            print("üì§ –í–´–í–û–î:")
            print(result.stdout)

        if result.stderr:
            print("‚ùå –û–®–ò–ë–ö–ò:")
            print(result.stderr)

        if result.returncode == 0:
            print("‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"‚ùå –ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –∫–æ–¥–æ–º {result.returncode}")

    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")


def show_file_structure():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"""
    print("\nüìÅ –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:")
    print("=" * 40)

    files_to_show = [
        "task_1_simple_logger.py",
        "task_2_parametrized_logger.py",
        "decorators.py",
        "main.py",
        "application/salary.py",
        "application/db/people.py",
        "test_decorators.py"
    ]

    for file in files_to_show:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} - –ù–ï –ù–ê–ô–î–ï–ù")


def show_generated_logs():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ª–æ–≥-—Ñ–∞–π–ª—ã"""
    print(f"\nüìÑ –°–û–ó–î–ê–ù–ù–´–ï –õ–û–ì-–§–ê–ô–õ–´:")
    print("=" * 40)

    log_extensions = ['.log']
    log_files = []

    # –ò—â–µ–º –≤—Å–µ .log —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for file in os.listdir('.'):
        if any(file.endswith(ext) for ext in log_extensions):
            log_files.append(file)

    if log_files:
        for log_file in sorted(log_files):
            size = os.path.getsize(log_file)
            print(f"üìã {log_file} ({size} bytes)")
    else:
        print("–õ–æ–≥-—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")


def main():
    """–ì–ª–∞–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –î–û–ú–ê–®–ù–ï–ì–û –ó–ê–î–ê–ù–ò–Ø –ü–û –î–ï–ö–û–†–ê–¢–û–†–ê–ú")
    print("=" * 60)
    print("–í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É...")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    show_file_structure()

    # –ó–∞–¥–∞–Ω–∏–µ 1: –ü—Ä–æ—Å—Ç–æ–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
    if os.path.exists("task_1_simple_logger.py"):
        run_task("task_1_simple_logger.py", "–ó–∞–¥–∞–Ω–∏–µ 1 - –ü—Ä–æ—Å—Ç–æ–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä logger")
    else:
        print("‚ùå –§–∞–π–ª task_1_simple_logger.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    # –ó–∞–¥–∞–Ω–∏–µ 2: –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
    if os.path.exists("task_2_parametrized_logger.py"):
        run_task("task_2_parametrized_logger.py", "–ó–∞–¥–∞–Ω–∏–µ 2 - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä logger")
    else:
        print("‚ùå –§–∞–π–ª task_2_parametrized_logger.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    # –ó–∞–¥–∞–Ω–∏–µ 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è
    print(f"\n{'=' * 60}")
    print("üéØ –ó–ê–î–ê–ù–ò–ï 3 - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è'")
    print('=' * 60)

    if os.path.exists("main.py"):
        run_task("main.py", "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è —Å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏")
    else:
        print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if os.path.exists("test_decorators.py"):
        run_task("test_decorators.py", "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤")
    else:
        print("‚ùå –§–∞–π–ª test_decorators.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ª–æ–≥–∏
    show_generated_logs()

    print(f"\n{'üéâ' * 20}")
    print("–í–°–ï –ó–ê–î–ê–ù–ò–Ø –í–´–ü–û–õ–ù–ï–ù–´!")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ª–æ–≥-—Ñ–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–±–æ—Ç—ã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.")
    print(f"{'üéâ' * 20}")


if __name__ == '__main__':
    main()