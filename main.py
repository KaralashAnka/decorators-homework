#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–æ–≥—Ä–∞–º–º—ã "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è" —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤
"""

import os
from datetime import datetime
from decorators import logger, performance_monitor
from application.salary import calculate_salary
from application.db.people import get_employees


@logger('main_operations.log')
@performance_monitor
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    print("=== –ü—Ä–æ–≥—Ä–∞–º–º–∞ '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è' —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º ===")
    print(f"–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    print("–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
    employees = get_employees()
    print()

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É
    print("–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É...")
    salary_results = calculate_salary()
    print()

    print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print(f"üìÑ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª—ã: main_operations.log, accounting.log")

    return "SUCCESS"


@logger
def show_logs():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤"""
    log_files = ['main_operations.log', 'accounting.log']

    for log_file in log_files:
        if os.path.exists(log_file):
            print(f"\nüìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ {log_file}:")
            print("-" * 60)
            with open(log_file, 'r', encoding='utf-8') as f:
                content = f.read()
                if content:
                    print(content)
                else:
                    print("–§–∞–π–ª –ø—É—Å—Ç–æ–π")
        else:
            print(f"‚ùå –§–∞–π–ª {log_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")


if __name__ == '__main__':
    main()
    print("\n" + "=" * 60)
    show_logs()